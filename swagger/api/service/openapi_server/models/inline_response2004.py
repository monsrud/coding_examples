# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class InlineResponse2004(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device=None, space_used=None, space_available=None, percent_used=None):  # noqa: E501
        """InlineResponse2004 - a model defined in OpenAPI

        :param device: The device of this InlineResponse2004.  # noqa: E501
        :type device: str
        :param space_used: The space_used of this InlineResponse2004.  # noqa: E501
        :type space_used: int
        :param space_available: The space_available of this InlineResponse2004.  # noqa: E501
        :type space_available: int
        :param percent_used: The percent_used of this InlineResponse2004.  # noqa: E501
        :type percent_used: str
        """
        self.openapi_types = {
            'device': str,
            'space_used': int,
            'space_available': int,
            'percent_used': str
        }

        self.attribute_map = {
            'device': 'device',
            'space_used': 'space_used',
            'space_available': 'space_available',
            'percent_used': 'percent_used'
        }

        self._device = device
        self._space_used = space_used
        self._space_available = space_available
        self._percent_used = percent_used

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2004':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_4 of this InlineResponse2004.  # noqa: E501
        :rtype: InlineResponse2004
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device(self):
        """Gets the device of this InlineResponse2004.


        :return: The device of this InlineResponse2004.
        :rtype: str
        """
        return self._device

    @device.setter
    def device(self, device):
        """Sets the device of this InlineResponse2004.


        :param device: The device of this InlineResponse2004.
        :type device: str
        """

        self._device = device

    @property
    def space_used(self):
        """Gets the space_used of this InlineResponse2004.


        :return: The space_used of this InlineResponse2004.
        :rtype: int
        """
        return self._space_used

    @space_used.setter
    def space_used(self, space_used):
        """Sets the space_used of this InlineResponse2004.


        :param space_used: The space_used of this InlineResponse2004.
        :type space_used: int
        """

        self._space_used = space_used

    @property
    def space_available(self):
        """Gets the space_available of this InlineResponse2004.


        :return: The space_available of this InlineResponse2004.
        :rtype: int
        """
        return self._space_available

    @space_available.setter
    def space_available(self, space_available):
        """Sets the space_available of this InlineResponse2004.


        :param space_available: The space_available of this InlineResponse2004.
        :type space_available: int
        """

        self._space_available = space_available

    @property
    def percent_used(self):
        """Gets the percent_used of this InlineResponse2004.


        :return: The percent_used of this InlineResponse2004.
        :rtype: str
        """
        return self._percent_used

    @percent_used.setter
    def percent_used(self, percent_used):
        """Sets the percent_used of this InlineResponse2004.


        :param percent_used: The percent_used of this InlineResponse2004.
        :type percent_used: str
        """

        self._percent_used = percent_used
